---
// Import the global.css file here so that it is included on
// all pages through the use of the <BaseHead /> component.
import '../styles/global.css'

export interface Props {
  title: string
  description: string
  image?: string
  isPost: boolean
  publishedTime: Date
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site)

const { title, description, image = '/logo.jpg', isPost, publishedTime } = Astro.props
const pubTime = publishedTime?.toISOString()
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<meta
  name="apple-mobile-web-app-status-bar-style"
  content="black-translucent"
/>
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<meta name="generator" content={Astro.generator} />

<!-- Canonical URL -->
<link rel="canonical" href={canonicalURL} />

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content="website" />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={new URL(image, Astro.url)} />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:creator" content="andre_zagatti" />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={new URL(image, Astro.url)} />

<!-- Others -->
<meta property="github:creator" content="azagatti" />
<meta name="author" property="author" content="AndrÃ© Luis Zagatti Adorna" />
{isPost && <meta name="article:published_time" property="article:published_time" content={pubTime} />}

<!-- Prism -->
{isPost && <link href="/prism-night-owl.css" rel="stylesheet" />}

<!-- Meta Pixel Code -->
<script>
// @ts-nocheck
!function(f,b,e,v,n,t,s)
{if(f.fbq)return;n=f.fbq=function(){n.callMethod?
n.callMethod.apply(n,arguments):n.queue.push(arguments)};
if(!f._fbq)f._fbq=n;n.push=n;n.loaded=!0;n.version='2.0';
n.queue=[];t=b.createElement(e);t.async=!0;
t.src=v;s=b.getElementsByTagName(e)[0];
s.parentNode.insertBefore(t,s)}(window, document,'script',
'https://connect.facebook.net/en_US/fbevents.js');
fbq('init', '603427578328081');
fbq('track', 'PageView');
</script>
<noscript><img height="1" width="1" style="display:none"
src="https://www.facebook.com/tr?id=603427578328081&ev=PageView&noscript=1"
/></noscript>

<!-- Scripts -->
<script>
  if ('loading' in HTMLIFrameElement.prototype) {
    const iframes = document.querySelectorAll<HTMLIFrameElement>(
      'iframe[loading="lazy"]'
    )

    iframes?.forEach((iframe) => {
      iframe.src = iframe.dataset.src ?? iframe.src
    })
  } else {
    // Dynamically import the LazySizes library
    const script = document.createElement('script')
    script.src =
      'https://cdnjs.cloudflare.com/ajax/libs/lazysizes/5.2.2/lazysizes.min.js'
    document.body.appendChild(script)
  }
</script>

<script is:inline>
  const Themes = {
    Dark: 'dark',
    Light: 'light',
  }
  const storageKey = 'azagatti:theme'

  const theme = (() => {
    if (
      typeof localStorage !== 'undefined' &&
      localStorage.getItem(storageKey)
    ) {
      return localStorage.getItem(storageKey)
    }
    if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
      return Themes.Dark
    }
    return Themes.Light
  })()
  if (theme === Themes.Light) {
    document.documentElement.classList.remove(Themes.Dark)
  } else {
    document.documentElement.classList.add(Themes.Dark)
  }
</script>
